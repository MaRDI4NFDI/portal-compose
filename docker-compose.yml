version: '3.4'

x-elasticsearch-image: &elasticsearch-image
  docker-registry.wikimedia.org/releng/cirrus-elasticsearch:7.10.2-s0
x-formulasearch-image: &formulasearch-image
  ghcr.io/mardi4nfdi/formulasearch:main
x-mongo-image: &mongo-image
  mongo:6.0
x-mysql-image: &mysql-image
  mariadb:11.6
x-portainer-image: &portainer-image
  portainer/portainer-ce
x-quickstatements-image: &quickstatements-image
  ghcr.io/wmde/wikibase/quickstatements:7657478403
x-redis: &redis-image
  redis:7
x-redis-jobrunner: &redis-jobrunner-image
  ghcr.io/mardi4nfdi/docker-redis-jobrunner:1.44.8
x-traefik-image: &traefik-image
  traefik:v2.8
x-wikibase: &wikibase-image
  ghcr.io/mardi4nfdi/docker-wikibase:1.44.8
x-wdqs-image: &wdqs-image
  ghcr.io/wmde/wikibase/wdqs:dev-9186217118
x-wdqs-frontend-image: &wdqs-frontend-image
  ghcr.io/wmde/wikibase/wdqs-frontend:dev-9186217118
x-wdqs-proxy-image: &wdqs-proxy-image
  ghcr.io/wmde/wikibase/wdqs-proxy:dev-9186217118

x-common-variables: &wikibase_variables
  DB_SERVER: ${DB_SERVER:-mysql.svc:3306}
  MW_ADMIN_NAME: ${MW_ADMIN_NAME:-admin}
  MW_ADMIN_PASS: ${MW_ADMIN_PASS}
  MW_ADMIN_EMAIL: ${MW_ADMIN_EMAIL:-admin@example.com}
  MW_WG_SECRET_KEY: ${MW_SECRET_KEY}
  MW_WG_JOB_RUN_RATE: 0
  DB_USER: ${DB_USER:-sqluser}
  DB_PASS: ${DB_PASS}
  DB_NAME: ${DB_NAME:-my_wiki}
  MSC_USER: ${MSC_USER}
  MSC_PASS: ${MSC_PASS}
  DEPLOYMENT_ENV: ${DEPLOYMENT_ENV:-local}
  WIKIBASE_SCHEME: ${WIKIBASE_SCHEME:-https}
  WIKIBASE_HOST: ${WIKIBASE_HOST:-portal.mardi4nfdi.de}
  WIKIBASE_PORT: ${WIKIBASE_PORT:-80}
  WIKIBASE_PINGBACK: ${WIKIBASE_PINGBACK:-false}
  MW_WG_ENABLE_UPLOADS: ${MW_WG_ENABLE_UPLOADS:-false}
  QS_PUBLIC_SCHEME_HOST_AND_PORT: https://quickstatements.${WIKIBASE_HOST}
  TRAEFIK_PW: ${TRAEFIK_PW}
  MATOMO_TOKEN: ${MATOMO_TOKEN}
  GOOGLE_OPENID_SECRET: ${GOOGLE_OPENID_SECRET}
  NFDI_AAI_SECRET: ${NFDI_AAI_SECRET}
  MW_ELASTIC_HOST: ${MW_ELASTIC_HOST:-elasticsearch.svc}
  MW_ELASTIC_PORT: ${MW_ELASTIC_PORT:-9200}

services:
  wikibase:
    image: *wikibase-image
    container_name: mardi-wikibase
    links:
      - mysql
      - mongo
      - formulasearch
    depends_on:
      - mysql
      - mongo
    restart: unless-stopped
    volumes:
      ## This shares the configuration with jobrunner
      - shared_mardi_wikibase:/shared/:rw
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d
      - ./mediawiki/LocalSettings.d:/var/www/html/w/LocalSettings.d
      - shared_mediawiki_images:/var/www/html/w/images/:rw
      - quickstatements-data:/quickstatements/data
      - formulasearch_harvests:/var/www/html/w/my_harvests/
      - apache_logs:/var/log/apache2/
    networks:
      default:
          aliases:
           - wikibase-docker.svc
           - wikibase.svc
    environment:
      <<: *wikibase_variables
    labels:
      - traefik.http.routers.service-wikibase.rule=Host(`${WIKIBASE_HOST}`,`swmath.${WIKIBASE_HOST}`,`staging.swmath.org`)
      - traefik.http.routers.service-wikibase.entrypoints=websecure
      - traefik.http.routers.service-wikibase.tls.certResolver=le
      - traefik.http.routers.service-wikibase.service=wikibase-service
      - traefik.http.services.wikibase-service.loadbalancer.server.port=80
      - traefik.http.routers.service-wikimongo.rule=Host(`wikimongo.${WIKIBASE_HOST}`)
      - traefik.http.routers.service-wikimongo.entrypoints=websecure
      - traefik.http.routers.service-wikimongo.tls.certResolver=le
      - traefik.http.routers.service-wikimongo.service=wikimongo-service
      - traefik.http.services.wikimongo-service.loadbalancer.server.port=8081
      
  mysql:
    image: *mysql-image
    container_name: mardi-mysql
    restart: unless-stopped
    volumes:
      - mediawiki-mysql-data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    networks:
      default:
        aliases:
         - mysql.svc
         - tools.labsdb

  mongo:
    image: *mongo-image
    container_name: mardi-mongo
    restart: unless-stopped
    volumes:
      - mediawiki-mongo-data:/data/db
    networks:
      default:
        aliases:
          - mongodb

  elasticsearch:
    image: *elasticsearch-image
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
         - elasticsearch.svc
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms8g -Xmx8g"

  formulasearch:
    image: *formulasearch-image
    container_name: formulasearch
    restart: "no"
    environment:
      HARVESTS_PATH: '/my_harvests'
      # Port config 1985 is internal port and should not be changed currently.
      FS_SERVER_PORT: 1985
      ENABLE_REST_INSERTIONS: 'false'
      CRON_UPDATE_FORMULAE: ${FS_CRON_UPDATE_FORMULAE}
      CRON_ENABLED: ${FS_CRON_ENABLED:-false}
      ALWAYS_EXPORT: ${FS_ALWAYS_EXPORT:-false}
    volumes:
      - formulasearch_harvests:/my_harvests/
      - ${BACKUP_DIR:-./backup}:/data

  redis:
    container_name: redis
    restart: unless-stopped
    image: *redis-image

  redis-jobrunner:
    image: *redis-jobrunner-image
    depends_on:
    - wikibase
    entrypoint: 
    - php
    - /jobrunner/redisJobRunnerService
    - "--config-file=/jobrunner/config.json"
    volumes:
    - ./redis-jobrunner-conf.json:/jobrunner/config.json:ro
    - shared_mardi_wikibase:/shared/
    - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d:ro
    environment:
      <<: *wikibase_variables

  redis-rescheduler:
    image: *redis-jobrunner-image
    depends_on:
    - wikibase
    volumes:
    - ./redis-jobrunner-conf.json:/jobrunner/config.json:ro
    - shared_mardi_wikibase:/shared/
    - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d:ro

  wdqs-frontend:
    image: *wdqs-frontend-image
    container_name: mardi-wdqs-frontend
    restart: unless-stopped
    volumes:
      - ./mediawiki/images/MaRDI_Logo_L_5_rgb_50p.svg:/usr/share/nginx/html/logo.svg
      - ./mediawiki/images/favicon.ico:/usr/share/nginx/html/favicon.ico
    depends_on:
      - wdqs-proxy
      - wikibase
    networks:
      default:
        aliases:
         - wdqs-frontend.svc
    environment:
      - WIKIBASE_HOST=wikibase.svc
      - WDQS_HOST=wdqs-proxy.svc
      - BRAND_TITLE=MaRDIQueryService
    labels:
      - traefik.http.routers.service-wdqs-frontend.rule=Host(`query.${WIKIBASE_HOST}`)
      - traefik.http.routers.service-wdqs-frontend.entrypoints=websecure
      - traefik.http.routers.service-wdqs-frontend.tls.certResolver=le

  wdqs:
    image: *wdqs-image
    restart: unless-stopped
    command: /runBlazegraph.sh
    volumes:
      - query-service-data:/wdqs/data
      - ./wdqs/prefixes.conf:/wdqs/prefixes.conf:ro
      - ./wdqs/allowlist.txt:/wdqs/allowlist.txt:ro
    networks:
      default:
        aliases:
         - wdqs.svc
    environment:
      - WIKIBASE_HOST=${WIKIBASE_HOST}
      - WIKIBASE_SCHEME=${WIKIBASE_SCHEME:-https}
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
      - BLAZEGRAPH_OPTS='-Dorg.wikidata.query.rdf.tool.rdf.RdfRepository.timeout=3600'
    expose:
      - 9999
    labels:
      - traefik.http.routers.service-wdqs.rule=Host(`wdqs.${WIKIBASE_HOST}`)
      - traefik.http.routers.service-wdqs.entrypoints=websecure
      - traefik.http.routers.service-wdqs.tls.certResolver=le
      - traefik.http.routers.service-wdqs.middlewares=auth
  # cf https://github.com/MaRDI4NFDI/wikibase-release-pipeline/blob/main/build/WDQS-proxy/README.md

  wdqs-proxy:
    image: *wdqs-proxy-image
    restart: unless-stopped
    environment:
      - PROXY_PASS_HOST=wdqs.svc:9999
      - PROXY_MAX_QUERY_MILLIS=3600000
    depends_on:
      - wdqs
    networks:
      default:
        aliases:
         - wdqs-proxy.svc
    labels:
      - traefik.http.routers.wdqs-proxy.rule=Host(`sparql.${WIKIBASE_HOST}`)
      - traefik.http.routers.wdqs-proxy.entrypoints=websecure
      - traefik.http.routers.wdqs-proxy.tls.certResolver=le

  wdqs-updater:
    image: *wdqs-image
    restart: unless-stopped
    command: /runUpdate.sh
    depends_on:
    - wdqs
    - wikibase
    networks:
      default:
        aliases:
         - wdqs-updater.svc
    environment:
      - WIKIBASE_HOST=${WIKIBASE_HOST}
      - WIKIBASE_SCHEME=${WIKIBASE_SCHEME:-https}
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
      - UPDATER_OPTS='-Dorg.wikidata.query.rdf.tool.wikibase.WikibaseRepository.timeout=15000'
    labels:
      - traefik.enable=false

  quickstatements:
    image: *quickstatements-image
    container_name: mardi-quickstatements
    restart: unless-stopped
    volumes:
      - quickstatements-data:/quickstatements/data:ro
    depends_on:
      - wikibase
    networks:
      default:
        aliases:
         - quickstatements.${WIKIBASE_HOST}
    labels:
      - traefik.http.routers.service-quickstatements.rule=Host(`quickstatements.${WIKIBASE_HOST}`)
      - traefik.http.routers.service-quickstatements.entrypoints=websecure
      - traefik.http.routers.service-quickstatements.tls.certResolver=le
    environment:
      - QUICKSTATEMENTS_HOST=https://quickstatements.${WIKIBASE_HOST}
      - WIKIBASE_SCHEME_AND_HOST=https://${WIKIBASE_HOST}
      - QS_PUBLIC_SCHEME_HOST_AND_PORT=https://quickstatements.${WIKIBASE_HOST}
      - WB_PUBLIC_SCHEME_HOST_AND_PORT=https://${WIKIBASE_HOST}
      - WB_PROPERTY_NAMESPACE=122
      - "WB_PROPERTY_PREFIX=Property:"
      - WB_ITEM_NAMESPACE=120
      - "WB_ITEM_PREFIX=Item:"

  traefik:
    restart: always
    image: *traefik-image
    container_name: reverse-proxy
    ports:
      - 443:443 # HTTPS port
      - 80:80 # HTTP port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/conf/:/traefik-conf/:ro
      - traefik-letsencrypt:/letsencrypt # Persistent file for ACME Setup (Certificate Store)
      - ./traefik-log:/data/log # Persistent file for logging
    networks:
      - default
    labels:
      - traefik.http.routers.dashboard.rule=Host(`traefik.${WIKIBASE_HOST}`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certResolver=le
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=mardi:$$2y$$05$$Ubl1B.74bDJkpGHXZ6Y4Xuq8lSx88bi51bmE85/VYf1nQizfKKuH.

  portainer:
    container_name: mardi-portainer
    image: *portainer-image
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # needs access to docker process
      - portainer-data:/data # volume to save settings of portainer
    labels:
      - traefik.http.routers.service-portainer.rule=Host(`portainer.${WIKIBASE_HOST}`)
      - traefik.http.routers.service-portainer.entrypoints=websecure
      - traefik.http.routers.service-portainer.tls.certResolver=le
      - traefik.http.services.portainer-docker.loadbalancer.server.port=9000

volumes:
  apache_logs:
  elasticsearch-data:
  formulasearch_harvests:
  LocalSettings:
  mediawiki-mysql-data:
  mediawiki-mongo-data:
  portainer-data:
  quickstatements-data:
  query-service-data:
  shared_mardi_wikibase:
  shared_mediawiki_images:
  traefik-letsencrypt:  

networks:                                
  default:                               
    driver: bridge                       
    driver_opts:                         
      com.docker.network.driver.mtu: 1450
