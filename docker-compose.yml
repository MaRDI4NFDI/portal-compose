# Example Wikibase docker-compose setup
version: '3.4'

x-common-variables: &wikibase_variables
  DB_SERVER: mysql.svc:3306
  MW_ADMIN_NAME: ${MW_ADMIN_NAME:-admin}
  MW_ADMIN_PASS: ${MW_ADMIN_PASS}
  MW_ADMIN_EMAIL: ${MW_ADMIN_EMAIL:-admin@example.com}
  MW_WG_SECRET_KEY: ${MW_SECRET_KEY}
  # Disable jobs running after requests when wikibase_jobrunner is defined
  MW_WG_JOB_RUN_RATE: 0
  DB_USER: ${DB_USER:-sqluser}
  DB_PASS: ${DB_PASS}
  DB_NAME: ${DB_NAME:-my_wiki}
  WIKIBASE_HOST: ${WIKIBASE_HOST:-portal.mardi4nfdi.de}
  QS_PUBLIC_SCHEME_HOST_AND_PORT: https://quickstatements.portal.mardi4nfdi.de
  TRAEFIK_PW: ${TRAEFIK_PW}
x-extra-variables: &wikibase_extra_variables
  MW_ELASTIC_HOST: ${MW_ELASTIC_HOST:-elasticsearch.svc}
  MW_ELASTIC_PORT: ${MW_ELASTIC_PORT:-9200}

services:
  wikibase:
    image: "ghcr.io/mardi4nfdi/docker-wikibase:main"
    container_name: mardi-wikibase
    links:
      - mysql
      - mongo
      - formulasearch
    depends_on:
      - mysql
      - mongo
    restart: unless-stopped
    volumes:
      ## This shares the configuration with jobrunner
      - shared_mardi_wikibase:/shared/:rw
     # - shared_mardi_wikibase:/var/www/html/:rw
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d
      - ./mediawiki/LocalSettings.d:/var/www/html/LocalSettings.d
      - shared_mediawiki_images:/var/www/html/images/:rw
      - ./mediawiki/images/MaRDI_Logo.png:/var/www/html/images_repo/MaRDI_Logo.png
      - ./mediawiki/images/MaRDI_Logo_S_5_rgba.png:/var/www/html/images_repo/MaRDI_Logo_S_5_rgba.png
      - ./mediawiki/images/favicon.png:/var/www/html/images_repo/favicon.png
      - quickstatements-data:/quickstatements/data
      - formulasearch_harvests:/var/www/html/my_harvests/
    networks:
      default:
        aliases:
         - wikibase-docker.svc
         - wikibase.svc
    environment:
      <<: *wikibase_variables
      WIKIBASE_PINGBACK:
      MW_WG___UPLOADS:
      <<: *wikibase_extra_variables
    labels:
      - traefik.http.routers.service-wikibase.rule=Host(`portal.mardi4nfdi.de`)
      - traefik.http.routers.service-wikibase.entrypoints=websecure
      - traefik.http.routers.service-wikibase.tls.certResolver=le

  wikibase_jobrunner:
    image: "ghcr.io/mardi4nfdi/docker-wikibase:main"
    entrypoint: /bin/bash
    command:  /jobrunner-entrypoint.sh
    links:
      - mysql
      - mongo
    depends_on:
      - mysql
      - mongo
    restart: always
    volumes:
      - shared_mardi_wikibase:/shared/
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d:ro
      - ./mediawiki/jobrunner-entrypoint.sh:/jobrunner-entrypoint.sh
    networks:
      default:
        aliases:
          - wikibase-jobrunner.svc
    environment:
      <<: *wikibase_variables
      MAX_JOBS: ${MAX_JOBS}
      <<: *wikibase_extra_variables

  mysql:
    image: "${MYSQL_IMAGE_NAME:-mariadb:10.3}"
    container_name: mardi-mysql
    restart: unless-stopped
    volumes:
      - mediawiki-mysql-data:/var/lib/mysql
    environment:
      # CONFIG - Change the default values below (should match values passed to wikibase)
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    networks:
      default:
        aliases:
         - mysql.svc

  mongo:
    image: mongo
    container_name: mardi-mongo
    restart: unless-stopped
    volumes:
      - mediawiki-mongo-data:/data/db
    networks:
      default:
        aliases:
          - mongodb


  importer:
    image: ghcr.io/mardi4nfdi/docker-importer:main
    container_name: mardi-importer
    links:
      - wikibase
      - mysql
    depends_on:
      - wikibase
    restart: always
    volumes:
      - shared_mardi_wikibase:/shared/:ro
      #- ./config/:/config
    environment:
      DB_HOST: mysql.svc # internal docker hostname (alias) of the database service
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      IMPORT_SCHEDULE: ${IMPORT_SCHEDULE}
      IMPORTER_CRON_ENABLE: ${IMPORTER_CRON_ENABLE:-false}
    entrypoint: "/app/start.sh"

  backup:
    image: ghcr.io/mardi4nfdi/docker-backup:main
    container_name: mardi-backup
    links:
      - mysql
    depends_on:
      - mysql
      - wikibase
    restart: always
    volumes:
      # shared from wikibase, to run dumpBackup.php and importBackup.php
      - shared_mardi_wikibase:/shared/:ro
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d
      - shared_mediawiki_images:/var/www/html/images/
      # dir on host where to store the backups
      - ${BACKUP_DIR:-./backup}:/data
    labels:
      - traefik.enable=false
    environment:
      DB_HOST: mysql.svc # internal docker hostname (alias) of the database service
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      BACKUP_SCHEDULE: ${BACKUP_SCHEDULE}
      KEEP_DAYS: ${KEEP_DAYS:-30}
      BACKUP_CRON_ENABLE: ${BACKUP_CRON_ENABLE:-true}
    entrypoint: "/app/start.sh"

  reverse-proxy:
    restart: always
    image: traefik:v2.5
    ports:
      - 443:443 # HTTPS port
      - 80:80 # HTTP port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/conf/:/traefik-conf/:ro
      - traefik-letsencrypt:/letsencrypt # Persistent file for ACME Setup (Certificate Store)
      - traefik-log:/data/log # Persistent file for logging
    networks:
     - default
    labels:
      - traefik.http.routers.dashboard.rule=Host(`traefik.portal.mardi4nfdi.de`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certResolver=le
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=mardi:$$2y$$05$$Ubl1B.74bDJkpGHXZ6Y4Xuq8lSx88bi51bmE85/VYf1nQizfKKuH.

  elasticsearch:
    image: "${ELASTICSEARCH_IMAGE_NAME:-wikibase/elasticsearch:6.8.23-wmde.6}"
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
         - elasticsearch.svc
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  formulasearch:
    image: ghcr.io/mardi4nfdi/formulasearch:main
    container_name: formulasearch
    restart: "no"
    environment:
      HARVESTS_PATH: '/my_harvests'
      # Port config 1985 is internal port and should not be changed currently.
      FS_SERVER_PORT: 1985
      ENABLE_REST_INSERTIONS: 'false'
      CRON_UPDATE_FORMULAE: ${FS_CRON_UPDATE_FORMULAE}
      CRON_ENABLED: ${FS_CRON_ENABLED:-false}
      ALWAYS_EXPORT: ${FS_ALWAYS_EXPORT:-false}
    ports:
      - 1985:1985
    volumes:
      - formulasearch_harvests:/my_harvests/
      - ${BACKUP_DIR:-./backup}:/data

  wdqs-frontend:
    image: "${WDQS_FRONTEND_IMAGE_NAME:-wikibase/wdqs-frontend:wmde.6}"
    container_name: mardi-wdqs-frontend
    restart: unless-stopped
    depends_on:
      - wdqs-proxy
      - wikibase
    networks:
      default:
        aliases:
         - query.portal.mardi4nfdi.de
         - wdqs-frontend.svc
    environment:
      - WIKIBASE_HOST=wikibase.svc
      - WDQS_HOST=wdqs-proxy.svc
    labels:
      - traefik.http.routers.service-wdqs-frontend.rule=Host(`query.portal.mardi4nfdi.de`)
      - traefik.http.routers.service-wdqs-frontend.entrypoints=websecure
      - traefik.http.routers.service-wdqs-frontend.tls.certResolver=le

  wdqs:
    image: "${WDQS_IMAGE_NAME:-wikibase/wdqs:0.3.40-wmde.6}"
    restart: unless-stopped
    command: /runBlazegraph.sh
    volumes:
      - query-service-data:/wdqs/data
    networks:
      default:
        aliases:
         - wdqs.svc
    environment:
      - WIKIBASE_HOST=portal.mardi4nfdi.de
      - WIKIBASE_SCHEME=https
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
    expose:
      - 9999

  wdqs-proxy:
    image: "${WDQS_PROXY_IMAGE_NAME:-wikibase/wdqs-proxy:wmde.6}"
    restart: unless-stopped
    environment:
      - PROXY_PASS_HOST=wdqs.svc:9999
    depends_on:
      - wdqs
    networks:
      default:
        aliases:
         - wdqs-proxy.svc

  wdqs-updater:
    image: "${WDQS_IMAGE_NAME:-wikibase/wdqs:0.3.40-wmde.6}"
    restart: unless-stopped
    command: /runUpdate.sh
    depends_on:
    - wdqs
    - wikibase
    networks:
      default:
        aliases:
         - wdqs-updater.svc
    environment:
     - WIKIBASE_HOST=portal.mardi4nfdi.de
     - WIKIBASE_SCHEME=https
     - WDQS_HOST=wdqs.svc
     - WDQS_PORT=9999
    labels:
      - traefik.enable=false

  quickstatements:
    image: "${QUICKSTATEMENTS_IMAGE_NAME:-ghcr.io/mardi4nfdi/docker-quickstatements:master}"
    container_name: mardi-quickstatements
    restart: unless-stopped
    volumes:
      - quickstatements-data:/quickstatements/data
    depends_on:
      - wikibase
    networks:
      default:
        aliases:
         - quickstatements.portal.mardi4nfdi.de
    labels:
      - traefik.http.routers.service-quickstatements.rule=Host(`quickstatements.portal.mardi4nfdi.de`)
      - traefik.http.routers.service-quickstatements.entrypoints=websecure
      - traefik.http.routers.service-quickstatements.tls.certResolver=le
    environment:
      - QUICKSTATEMENTS_HOST=https://quickstatements.portal.mardi4nfdi.de
      - WIKIBASE_SCHEME_AND_HOST=http://wikibase-docker.svc
      - QS_PUBLIC_SCHEME_HOST_AND_PORT=https://quickstatements.portal.mardi4nfdi.de
      - WB_PUBLIC_SCHEME_HOST_AND_PORT=https://portal.mardi4nfdi.de
      - WB_PROPERTY_NAMESPACE=122
      - "WB_PROPERTY_PREFIX=Property:"
      - WB_ITEM_NAMESPACE=120
      - "WB_ITEM_PREFIX=Item:"
      - OAUTH_CONSUMER_KEY=${OAUTH_CONSUMER_KEY}
      - OAUTH_CONSUMER_SECRET=${OAUTH_CONSUMER_SECRET}

  # Management console for docker
  portainer:
    container_name: mardi-portainer
    image: portainer/portainer-ce
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # needs access to docker process
      - portainer-data:/data # volume to save settings of portainer
    labels:
      - traefik.http.routers.service-portainer.rule=Host(`portainer.portal.mardi4nfdi.de`)
      - traefik.http.routers.service-portainer.entrypoints=websecure
      - traefik.http.routers.service-portainer.tls.certResolver=le
      - traefik.http.services.portainer-docker.loadbalancer.server.port=9000

  latexml:
    container_name: latexml
    image: physikerwelt/latexml
    restart: always

  setup_prometheus:
    image: "ghcr.io/mardi4nfdi/docker-alpine-ext:main"
    volumes:
      - ./prometheus/:/etc/prometheus/:rw
    command: sh -c "envsubst < /etc/prometheus/prometheus.template.yml > /etc/prometheus/prometheus.yml"
    environment:
      - TRAEFIK_USER
      - TRAEFIK_PW
      - HOST_NETWORK_IP
      - WATCHTOWER_API_TOKEN

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    depends_on:
      - setup_prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    labels:
      - traefik.http.routers.prometheus.rule=Host(`prometheus.portal.mardi4nfdi.de`)
      - traefik.http.routers.prometheus.entrypoints=websecure
      - traefik.http.routers.prometheus.tls.certResolver=le
      - traefik.http.routers.prometheus.middlewares=auth

  setup_grafana:
    image: "ghcr.io/mardi4nfdi/docker-alpine-ext:main"
    volumes:
      - ./grafana/:/etc/grafana/:rw
    command: sh -c "envsubst < /etc/grafana/grafana.template.ini > /etc/grafana/grafana.ini"
    environment:
      - GF_MAIL_HOST
      - GF_MAIL_USER
      - GF_MAIL_PW
      - GF_MAIL_FROMADDRESS
      - GF_MAIL_FROMNAME

  grafana:
    image: grafana/grafana
    depends_on:
      - setup_grafana
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/
    labels:
      - traefik.http.routers.grafana.rule=Host(`grafana.portal.mardi4nfdi.de`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls.certResolver=le

  # recommended setup from
  # https://github.com/prometheus/node_exporter/issues/671
  # shared processes and network with host
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--collector.textfile.directory=/backup_data'
      - '--web.listen-address=:9101'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
      - '${BACKUP_DIR:-./backup}:/backup_data:ro'

  # Watchtower provides automatic updates for all containers
  # see https://containrrr.github.io/watchtower/arguments/
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --include-stopped --revive-stopped --schedule "0 0 1 * * *" --http-api-metrics --http-api-token ${WATCHTOWER_API_TOKEN}
    restart: always

volumes:
  shared_mardi_wikibase:
  mediawiki-mysql-data:
  mediawiki-mongo-data:
  traefik-log:
  traefik-letsencrypt:
  LocalSettings:
  query-service-data:
  elasticsearch-data:
  quickstatements-data:
  portainer-data: # volume to save settings of portainer
  prometheus_data:
  grafana_data:
  formulasearch_harvests:
  shared_mediawiki_images:
