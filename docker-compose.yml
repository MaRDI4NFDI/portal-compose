# Example Wikibase docker-compose setup
version: '3.4'

x-common-variables: &wikibase_variables
  DB_SERVER: mysql.svc:3306
  MW_ADMIN_NAME: ${MW_ADMIN_NAME:-admin}
  MW_ADMIN_PASS: ${MW_ADMIN_PASS}
  MW_ADMIN_EMAIL: ${MW_ADMIN_EMAIL:-admin@example.com}
  MW_WG_SECRET_KEY: ${MW_SECRET_KEY}
  # Disable jobs running after requests when wikibase_jobrunner is defined
  MW_WG_JOB_RUN_RATE: 0
  DB_USER: ${DB_USER:-sqluser}
  DB_PASS: ${DB_PASS}
  DB_NAME: ${DB_NAME:-my_wiki}
  TLD: ${TLD:-de}
  DEPLOYMENT_ENV: ${DEPLOYMENT_ENV:-local}
  WIKIBASE_SCHEME: ${WIKIBASE_SCHEME:-https}
  WIKIBASE_HOST: ${WIKIBASE_HOST:-localhost}
  WIKIBASE_PORT: ${WIKIBASE_PORT:-80}
  QS_PUBLIC_SCHEME_HOST_AND_PORT: https://quickstatements.portal.mardi4nfdi.${TLD}
  TRAEFIK_PW: ${TRAEFIK_PW}
x-extra-variables: &wikibase_extra_variables
  MW_ELASTIC_HOST: ${MW_ELASTIC_HOST:-elasticsearch.svc}
  MW_ELASTIC_PORT: ${MW_ELASTIC_PORT:-9200}

services:
  wikibase:
    image: "ghcr.io/mardi4nfdi/docker-wikibase:main"
    container_name: mardi-wikibase
    links:
      - mysql
      - mongo
    depends_on:
      - mysql
      - mongo
    restart: unless-stopped
    volumes:
      ## This shares the configuration with jobrunner
      - shared_mardi_wikibase:/shared/:rw
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d
      - ./mediawiki/LocalSettings.d:/var/www/html/LocalSettings.d
      - shared_mediawiki_images:/var/www/html/images/:rw
      - apache_logs:/var/log/apache2/
    networks:
      default:
          aliases:
           - wikibase-docker.svc
           - wikibase.svc
    environment:
      <<: [ *wikibase_variables, *wikibase_extra_variables]
      WIKIBASE_PINGBACK:
      MW_WG_ENABLE_UPLOADS:
      MATOMO_TOKEN: ${MATOMO_TOKEN}
      GOOGLE_OPENID_SECRET: ${GOOGLE_OPENID_SECRET}
    labels:
      - traefik.http.routers.service-wikibase.rule=Host(`portal.mardi4nfdi.${TLD}`,`swmath.portal.mardi4nfdi.${TLD}`,`staging.swmath.org`)
      - traefik.http.routers.service-wikibase.entrypoints=websecure
      - traefik.http.routers.service-wikibase.tls.certResolver=le
      - traefik.http.routers.service-wikibase.service=wikibase-service
      - traefik.http.services.wikibase-service.loadbalancer.server.port=80
      - traefik.http.routers.service-wikimongo.rule=Host(`wikimongo.portal.mardi4nfdi.${TLD}`)
      - traefik.http.routers.service-wikimongo.entrypoints=websecure
      - traefik.http.routers.service-wikimongo.tls.certResolver=le
      - traefik.http.routers.service-wikimongo.service=wikimongo-service
      - traefik.http.services.wikimongo-service.loadbalancer.server.port=8081
  
  wikibase_jobrunner:
    image: "ghcr.io/mardi4nfdi/docker-wikibase:main"
    entrypoint: /bin/bash
    command:  /jobrunner-entrypoint.sh
    links:
      - mysql
      - mongo
    depends_on:
      - mysql
      - mongo
    restart: always
    volumes:
      - shared_mardi_wikibase:/shared/
      - ./mediawiki/LocalSettings.d:/shared/LocalSettings.d:ro
      - ./mediawiki/jobrunner-entrypoint.sh:/jobrunner-entrypoint.sh
    networks:
      default:
        aliases:
          - wikibase-jobrunner.svc
    environment:
      <<: [ *wikibase_variables, *wikibase_extra_variables]
      MAX_JOBS: ${MAX_JOBS}
      MATOMO_TOKEN: ${MATOMO_TOKEN}
      GOOGLE_OPENID_SECRET: ${GOOGLE_OPENID_SECRET}
      
  mysql:
    image: "${MYSQL_IMAGE_NAME:-mariadb:10.6}"
    container_name: mardi-mysql
    restart: unless-stopped
    volumes:
      - mediawiki-mysql-data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      # CONFIG - Change the default values below (should match values passed to wikibase)
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    networks:
      default:
        aliases:
         - mysql.svc

  mongo:
    image: mongo
    container_name: mardi-mongo
    restart: unless-stopped
    volumes:
      - mediawiki-mongo-data:/data/db
    networks:
      default:
        aliases:
          - mongodb

  reverse-proxy:
    restart: always
    image: traefik:v2.8
    container_name: reverse-proxy
    ports:
      - 443:443 # HTTPS port
      - 80:80 # HTTP port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/conf/:/traefik-conf/:ro
      - traefik-letsencrypt:/letsencrypt # Persistent file for ACME Setup (Certificate Store)
      - ./traefik-log:/data/log # Persistent file for logging
    networks:
      - default
    labels:
      - traefik.http.routers.dashboard.rule=Host(`traefik.portal.mardi4nfdi.${TLD}`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls.certResolver=le
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=mardi:$$2y$$05$$Ubl1B.74bDJkpGHXZ6Y4Xuq8lSx88bi51bmE85/VYf1nQizfKKuH.

  elasticsearch:
    image: "${ELASTICSEARCH_IMAGE_NAME:-docker-registry.wikimedia.org/releng/cirrus-elasticsearch:7.10.2-s0}"
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      default:
        aliases:
         - elasticsearch.svc
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms8g -Xmx8g"

  wdqs-frontend:
    image: "${WDQS_FRONTEND_IMAGE_NAME}"
    container_name: mardi-wdqs-frontend
    restart: unless-stopped
    volumes:
      - ./mediawiki/images/MaRDI_Logo_L_5_rgb_50p.svg:/usr/share/nginx/html/logo.svg
      - ./mediawiki/images/favicon.ico:/usr/share/nginx/html/favicon.ico
    depends_on:
      - wdqs-proxy
      - wikibase
    networks:
      default:
        aliases:
         - query.portal.mardi4nfdi.${TLD}
         - wdqs-frontend.svc
    environment:
      - WIKIBASE_HOST=portal.mardi4nfdi.${TLD}
      - WDQS_HOST=wdqs-proxy.svc
      - BRAND_TITLE=MaRDIQueryService
    labels:
      - traefik.http.routers.service-wdqs-frontend.rule=Host(`query.portal.mardi4nfdi.${TLD}`)
      - traefik.http.routers.service-wdqs-frontend.entrypoints=websecure
      - traefik.http.routers.service-wdqs-frontend.tls.certResolver=le

  wdqs:
    image: "${WDQS_IMAGE_NAME}"
    restart: unless-stopped
    command: /runBlazegraph.sh
    volumes:
      - query-service-data:/wdqs/data
    networks:
      default:
        aliases:
         - wdqs.svc
    environment:
      - WIKIBASE_HOST=portal.mardi4nfdi.${TLD}
      - WIKIBASE_SCHEME=${WIKIBASE_SCHEME:-https}
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
    expose:
      - 9999

  wdqs-proxy:
    image: "${WDQS_PROXY_IMAGE_NAME}"
    restart: unless-stopped
    environment:
      - PROXY_PASS_HOST=wdqs.svc:9999
    depends_on:
      - wdqs
    networks:
      default:
        aliases:
         - wdqs-proxy.svc
    labels:
      - traefik.http.routers.wdqs-proxy.rule=Host(`sparql.portal.mardi4nfdi.${TLD}`)
      - traefik.http.routers.wdqs-proxy.entrypoints=websecure
      - traefik.http.routers.wdqs-proxy.tls.certResolver=le

  wdqs-updater:
    image: "${WDQS_IMAGE_NAME}"
    restart: unless-stopped
    command: /runUpdate.sh
    depends_on:
    - wdqs
    - wikibase
    networks:
      default:
        aliases:
         - wdqs-updater.svc
    environment:
     - WIKIBASE_HOST=portal.mardi4nfdi.${TLD}
     - WIKIBASE_SCHEME=${WIKIBASE_SCHEME:-https}
     - WDQS_HOST=wdqs.svc
     - WDQS_PORT=9999
    labels:
      - traefik.enable=false

  # Watchtower provides automatic updates for all containers
  # see https://containrrr.github.io/watchtower/arguments/
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --include-stopped --revive-stopped --schedule "0 0 1 * * 1" --http-api-metrics --http-api-token ${WATCHTOWER_API_TOKEN}
    restart: always
    
volumes:
  es-data:
  es-logs:
  shared_mardi_wikibase:
  mediawiki-mysql-data:
  mediawiki-mongo-data:
  traefik-letsencrypt:
  LocalSettings:
  query-service-data:
  elasticsearch-data:
  shared_mediawiki_images:
  apache_logs:

networks:                                
  default:                               
    driver: bridge                       
    driver_opts:                         
      com.docker.network.driver.mtu: 1450
